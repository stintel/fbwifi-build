# commands we want to run at first boot only
# see https://openwrt.org/docs/guide-developer/uci-defaults

# Enable radio0 only, with an SSID indicating where we are in the boot process.
# Use a random password, because we don't want anyone connecting to it yet.
# (We are just using the SSID value to indicate where we are in the boot process.)
WIFI_PASSWD=$(hexdump -n 4 -e '"%08X"' /dev/random)
uci set wireless.radio0.disabled=0
uci set wireless.default_radio0.ssid='FBWiFi_InitialState'
uci set wireless.default_radio0.encryption='psk2'
uci set wireless.default_radio0.key="$WIFI_PASSWD"
uci set wireless.radio1.disabled=1

# Move eth0 from LAN to WAN, and make it use DHCP client to get its IP configuration.
uci del network.@device[0].ports
uci set network.MyWan=interface
uci set network.MyWan.proto='dhcp'
uci set network.MyWan.device='eth0'
uci add_list firewall.@zone[1].network='MyWan'

# Allow HTTP and SSH administration from WAN (Ethernet) side.
# Presumably we will disallow this later in the boot process, but we leave
# them open for now to help with debugging.
uci add firewall rule
uci set firewall.@rule[-1].name='Allow-HTTP-Admin'
uci add_list firewall.@rule[-1].proto='tcp'
uci set firewall.@rule[-1].src='wan'
uci set firewall.@rule[-1].dest_port='80'
uci set firewall.@rule[-1].target='ACCEPT'
uci add firewall rule
uci set firewall.@rule[-1].name='Allow-SSH-Admin'
uci add_list firewall.@rule[-1].proto='tcp'
uci set firewall.@rule[-1].src='wan'
uci set firewall.@rule[-1].dest_port='22'
uci set firewall.@rule[-1].target='ACCEPT'

uci commit

# Once all that's done... make our bootscripts run on every boot.
# They will also run later on in this "firstboot" cycle.
echo "source /etc/bootscript1 &>/tmp/log/bootscripts" >/etc/rc.local
